//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Health.DicomCast.Core {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DicomCastCoreResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DicomCastCoreResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Health.DicomCast.Core.DicomCastCoreResource", typeof(DicomCastCoreResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data store operation failed..
        /// </summary>
        internal static string DataStoreOperationFailed {
            get {
                return ResourceManager.GetString("DataStoreOperationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FHIR server version cannot be validated. Configure a FHIR service with version R4 and with transaction capabilites..
        /// </summary>
        internal static string FailedToValidateFhirVersion {
            get {
                return ResourceManager.GetString("FailedToValidateFhirVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configured FHIR service does not support transactions needed to  publish FHIR changes. Configure a FHIR service with transaction capabilites..
        /// </summary>
        internal static string FhirServerTransactionNotSupported {
            get {
                return ResourceManager.GetString("FhirServerTransactionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The response status value &apos;{0}&apos; for bundle entry at index &apos;{1}&apos; is invalid..
        /// </summary>
        internal static string InvalidBundleEntryResponseStatus {
            get {
                return ResourceManager.GetString("InvalidBundleEntryResponseStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not valid for DICOM tag &apos;{1}&apos;..
        /// </summary>
        internal static string InvalidDicomTagValue {
            get {
                return ResourceManager.GetString("InvalidDicomTagValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The id of the resource is missing..
        /// </summary>
        internal static string InvalidFhirResourceMissingId {
            get {
                return ResourceManager.GetString("InvalidFhirResourceMissingId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version id of the resource is missing..
        /// </summary>
        internal static string InvalidFhirResourceMissingVersionId {
            get {
                return ResourceManager.GetString("InvalidFhirResourceMissingVersionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FHIR service version is not supported. Configure a FHIR service that supports FHIR version R4..
        /// </summary>
        internal static string InvalidFhirServerVersion {
            get {
                return ResourceManager.GetString("InvalidFhirServerVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of bundle entry in response does not match the request..
        /// </summary>
        internal static string MismatchBundleEntryCount {
            get {
                return ResourceManager.GetString("MismatchBundleEntryCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The endpoint already exists but the address does not match..
        /// </summary>
        internal static string MismatchEndpointAddress {
            get {
                return ResourceManager.GetString("MismatchEndpointAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transaction indicates success but the status value &apos;{0}&apos; for bundle entry at index &apos;{1}&apos; indicates failure. .
        /// </summary>
        internal static string MismatchTransactionStatusCode {
            get {
                return ResourceManager.GetString("MismatchTransactionStatusCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The bundle entry at index &apos;{0}&apos; is missing..
        /// </summary>
        internal static string MissingBundleEntry {
            get {
                return ResourceManager.GetString("MissingBundleEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The response for bundle entry at index &apos;{0}&apos; is missing..
        /// </summary>
        internal static string MissingBundleEntryResponse {
            get {
                return ResourceManager.GetString("MissingBundleEntryResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The response status for bundle entry at index &apos;{0}&apos; is missing..
        /// </summary>
        internal static string MissingBundleEntryResponseStatus {
            get {
                return ResourceManager.GetString("MissingBundleEntryResponseStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The required DICOM tag &apos;{0}&apos; is missing..
        /// </summary>
        internal static string MissingRequiredDicomTag {
            get {
                return ResourceManager.GetString("MissingRequiredDicomTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The response bundle is missing..
        /// </summary>
        internal static string MissingResponseBundle {
            get {
                return ResourceManager.GetString("MissingResponseBundle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple &apos;{0}&apos; matching the search criteria found..
        /// </summary>
        internal static string MultipleMatchingResourcesFound {
            get {
                return ResourceManager.GetString("MultipleMatchingResourcesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The change feed action &apos;{0}&apos; is not supported..
        /// </summary>
        internal static string NotSupportedChangeFeedAction {
            get {
                return ResourceManager.GetString("NotSupportedChangeFeedAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A retryable exception was thrown..
        /// </summary>
        internal static string RetryableException {
            get {
                return ResourceManager.GetString("RetryableException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transaction failed. Please examine the OperationOutcome for more detail..
        /// </summary>
        internal static string TransactionFailed {
            get {
                return ResourceManager.GetString("TransactionFailed", resourceCulture);
            }
        }
    }
}
