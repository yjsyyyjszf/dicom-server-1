{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "serviceName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "metadata": {
                "description": "Name of the scale testing service Web App."
            }
        },
        "appServicePlanResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource group containing App Service Plan. If empty, deployment resource group is used."
            }
        },
        "appServicePlanName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of App Service Plan (existing or new). If empty, a name will be generated."
            }
        },
        "appServicePlanSku": {
            "type": "string",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
            ],
            "defaultValue": "S1"
        },
        "storageAccountSku": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GZRS",
                "Standard_RAGZRS"
            ],
            "defaultValue": "Standard_LRS"
        },
        "deployApplicationInsights": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Deploy Application Insights for the DICOM server. Disabled for Microsoft Azure Government (MAG)"
            }
        },
        "applicationInsightsLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "allowedValues": [
                "southeastasia",
                "northeurope",
                "westeurope",
                "eastus",
                "southcentralus",
                "westus2"
            ]
        }
    },
    "variables": {
        "isMAG": "[or(contains(resourceGroup().location,'usgov'),contains(resourceGroup().location,'usdod'))]",
        "serviceName": "[toLower(parameters('serviceName'))]",
        "appServicePlanResourceGroup": "[if(empty(parameters('appServicePlanResourceGroup')), resourceGroup().name, parameters('appServicePlanResourceGroup'))]",
        "appServicePlanName": "[if(empty(parameters('appServicePlanName')), concat(variables('serviceName'),'-asp'), parameters('appServicePlanName'))]",
        "appServicePlanResourceId": "[resourceId(variables('appServicePlanResourceGroup'), 'Microsoft.Web/serverfarms/', variables('appServicePlanName'))]",
        "appServiceResourceId": "[resourceId('Microsoft.Web/sites', variables('serviceName'))]",
        "deployAppInsights": "[and(parameters('deployApplicationInsights'),not(variables('isMAG')))]",
        "appInsightsName": "[concat('AppInsights-', variables('serviceName'))]",
        "storageAccountName": "[concat(substring(replace(variables('serviceName'), '-', ''), 0, min(11, length(variables('serviceName')))), uniquestring(resourceGroup().id))]",
        "storageResourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "keyVaultEndpoint": "[if(variables('isMAG'), concat('https://', variables('serviceName'), '.vault.usgovcloudapi.net/'), concat('https://', variables('serviceName'), '.vault.azure.net/'))]",
        "keyVaultResourceId": "[resourceId('Microsoft.KeyVault/vaults', variables('serviceName'))]",
        "serviceBusTopics": ["qido", "qido-test", "stow-rs", "stow-rs-test", "wado-rs", "wado-rs-test", "wado-rs-metadata", "wado-rs-metadata-test"],
        "serviceBusResourceId": "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceName'))]",
        "serviceBusDefaultSASKeyName": "RootManageSharedAccessKey",
        "serviceBusDefaultAuthRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceName'), variables('serviceBusDefaultSASKeyName'))]",
        "appConfigurationStoresResourceId": "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('serviceName'))]"
    },
    "resources": [
        {
            "condition": "[empty(parameters('appServicePlanResourceGroup'))]",
            "apiVersion": "2015-08-01",
            "name": "[variables('appServicePlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "tags": {},
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('appServicePlanSku')]"
            },
            "properties": {
                "name": "[variables('appServicePlanName')]"
            }
        },
        {
            "apiVersion": "2015-08-01",
            "type": "Microsoft.Web/sites",
            "name": "[variables('serviceName')]",
            "tags": {},
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "clientAffinityEnabled": false,
                "serverFarmId": "[variables('appServicePlanResourceId')]"
            },
            "dependsOn": [
                "[variables('appServicePlanResourceId')]"
            ],
            "resources": [
                {
                    "apiVersion": "2015-08-01",
                    "name": "AspNetCoreRuntime.5.0.x64",
                    "type": "siteextensions",
                    "dependsOn": [
                        "[variables('appServiceResourceId')]"
                    ],
                    "properties": {
                        "version": "5.0.5"
                    }
                }
            ]
        },
        {
            "apiVersion": "2016-08-01",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(variables('serviceName'), '/web')]",
            "dependsOn": [
                "[variables('appServiceResourceId')]"
            ],
            "properties": {
                "alwaysOn": true
            }
        },
        {
            "apiVersion": "2015-05-01",
            "name": "[variables('appInsightsName')]",
            "type": "Microsoft.Insights/components",
            "location": "[parameters('applicationInsightsLocation')]",
            "condition": "[variables('deployAppInsights')]",
            "kind": "web",
            "tags": {
                "[concat('hidden-link:', variables('appServiceResourceId'))]": "Resource",
                "displayName": "AppInsightsComponent"
            },
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('serviceName')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2019-04-01",
            "tags": {},
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "[parameters('storageAccountSku')]"
            },
            "properties": {
                "accessTier": "Hot",
                "supportsHttpsTrafficOnly": "true"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[parameters('serviceName')]",
            "location": "[resourceGroup().location]",
            "tags": {},
            "sku": {
                "name": "Standard",
                "capacity": 1,
                "tier": "Standard"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "apiVersion": "2015-08-01",
            "name": "[concat(variables('serviceName'), '/', variables('serviceBusTopics')[copyIndex()])]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceName'))]"
            ],
            "properties": {
                "defaultMessageTimeToLive": "14.00:00:00",
                "enableBatchedOperations": false,
                "enableExpress": false,
                "enablePartitioning": true,
                "enableSubscriptionPartitioning": false,
                "filteringMessagesBeforePublishing": false,
                "isAnonymousAccessible": false,
                "isExpress": false,
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "sizeInBytes": 0,
                "supportOrdering": false
            },
            "resources": [{
                "apiVersion": "2015-08-01",
                "name": "s1",
                "type": "Subscriptions",
                "dependsOn": [
                    "[variables('serviceBusTopics')[copyIndex()]]"
                ],
                "properties": {
                    "lockDuration": "00:02:30"
                }
            }],
            "copy": {
                "name": "topicCopy",
                "count": "[length(variables('serviceBusTopics'))]"
            }
        },
        {
            "type": "Microsoft.AppConfiguration/configurationStores",
            "apiVersion": "2019-11-01-preview",
            "name": "[parameters('serviceName')]",
            "location": "[resourceGroup().location]",
            "tags": {},
            "sku": {
                "name": "standard"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('serviceName')]",
            "apiVersion": "2015-06-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[reference(variables('appServiceResourceId'), '2015-08-01', 'Full').Identity.tenantId]",
                "accessPolicies": [
                    {
                        "tenantId": "[reference(variables('appServiceResourceId'), '2015-08-01', 'Full').Identity.tenantId]",
                        "objectId": "[reference(variables('appServiceResourceId'), '2015-08-01', 'Full').Identity.principalId]",
                        "permissions": {
                            "secrets": [
                                "get",
                                "list",
                                "set"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false
            },
            "dependsOn": [
                "[variables('appServiceResourceId')]"
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('serviceName'), '/ServiceBus--ConnectionString')]",
            "apiVersion": "2015-06-01",
            "properties": {
                "contentType": "text/plain",
                "value": "[listkeys(variables('serviceBusDefaultAuthRuleResourceId'), '2017-04-01').primaryConnectionString]"
            },
            "dependsOn": [
                "[variables('keyVaultResourceId')]",
                "[variables('serviceBusResourceId')]"
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('serviceName'), '/AppConfiguration--ConnectionString')]",
            "apiVersion": "2015-06-01",
            "properties": {
                "contentType": "text/plain",
                "value": "[listkeys(variables('appConfigurationStoresResourceId'), '2019-11-01-preview').value[0].connectionString]"
            },
            "dependsOn": [
                "[variables('keyVaultResourceId')]",
                "[variables('appConfigurationStoresResourceId')]"
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('serviceName'), '/ApplicationInsights--InstrumentationKey')]",
            "apiVersion": "2015-06-01",
            "properties": {
                "contentType": "text/plain",
                "value": "[reference(concat('Microsoft.Insights/components/', variables('appInsightsName'))).InstrumentationKey]"
            },
            "dependsOn": [
                "[variables('keyVaultResourceId')]",
                "[concat('Microsoft.Insights/components/', variables('appInsightsName'))]"
            ]
        }
    ]
}
