{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "serviceName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "metadata": {
                "description": "Name of the DICOM service Web App."
            }
        },
        "appServicePlanResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the resource group containing App Service Plan. If empty, your deployment resource group is used."
            }
        },
        "appServicePlanName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of App Service Plan (existing or new). If empty, a name will be generated."
            }
        },
        "appServicePlanSku": {
            "type": "string",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
            ],
            "defaultValue": "S1",
            "metadata": {
                "description": "Choose an App Service Plan SKU, or pricing tier. S1 is the default tier enabled."
            }
        },
        "storageAccountSku": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GZRS",
                "Standard_RAGZRS"
            ],
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Choose a SKU for your storage account. By default, Standard Locally Redundant Storage is selected."
            }
        },
        "deployApplicationInsights": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Deploy Application Insights for the DICOM server. Disabled for Microsoft Azure Government (MAG)"
            }
        },
        "applicationInsightsLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "allowedValues": [
                "southeastasia",
                "northeurope",
                "westeurope",
                "eastus",
                "southcentralus",
                "westus2"
            ],
            "metadata": {
                "description": "Select a location for Application Insights. If empty, the region closet to your deployment location is used."
            }
        },
        "additionalDicomServerConfigProperties": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Additional configuration properties for the DICOM server. These properties can be modified after deployment. In the form {\"path1\":\"value1\",\"path2\":\"value2\"}"
            }
        },
        "sqlAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Set a password for the sql admin."
            }
        },
        "sqlLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Set an override location for the default sql server database location."
            }
        },
        "deployOhifViewer": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Deploy OHIF viewer that is configured for the DICOM server."
            }
        },
        "securityAuthenticationAuthority": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "OAuth Authority. This can be modified after deployment."
            }
        },
        "securityAuthenticationAudience": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Audience (aud) to validate in JWT. This can be modified after deployment."
            }
        },
        "solutionType": {
            "type": "string",
            "defaultValue": "DicomServerSqlServer",
            "metadata": {
                "description": "The type of the solution"
            }
        },
        "deployPackage": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Webdeploy package specified by deployPackageUrl."
            }
        },
        "deployPackageUrl": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Webdeploy package to use as deployment code. If blank, the latest CI code package will be deployed."
            }
        }
    },
    "variables": {
        "isMAG": "[or(contains(resourceGroup().location,'usgov'),contains(resourceGroup().location,'usdod'))]",
        "serviceName": "[toLower(parameters('serviceName'))]",
        "appServicePlanResourceGroup": "[if(empty(parameters('appServicePlanResourceGroup')), resourceGroup().name, parameters('appServicePlanResourceGroup'))]",
        "appServicePlanName": "[if(empty(parameters('appServicePlanName')), concat(variables('serviceName'),'-asp'), parameters('appServicePlanName'))]",
        "appServicePlanResourceId": "[resourceId(variables('appServicePlanResourceGroup'), 'Microsoft.Web/serverfarms/', variables('appServicePlanName'))]",
        "appServiceResourceId": "[resourceId('Microsoft.Web/sites', variables('serviceName'))]",
        "deployAppInsights": "[and(parameters('deployApplicationInsights'),not(variables('isMAG')))]",
        "appInsightsName": "[concat('AppInsights-', variables('serviceName'))]",
        "securityAuthenticationEnabled": "[and(not(empty(parameters('securityAuthenticationAuthority'))),not(empty(parameters('securityAuthenticationAudience'))))]",
        "staticDicomServerConfigProperties": {
            "APPINSIGHTS_PORTALINFO": "ASP.NETCORE",
            "APPINSIGHTS_PROFILERFEATURE_VERSION": "1.0.0",
            "APPINSIGHTS_SNAPSHOTFEATURE_VERSION": "1.0.0",
            "WEBSITE_NODE_DEFAULT_VERSION": "6.9.4",
            "KeyVault:Endpoint": "[variables('keyVaultEndpoint')]",
            "SqlServer:Initialize": "true",
            "DicomServer:Features:EnableOhifViewer": "[parameters('deployOhifViewer')]",
            "DicomServer:Security:Enabled": "[variables('securityAuthenticationEnabled')]",
            "DicomServer:Security:Authentication:Authority": "[parameters('securityAuthenticationAuthority')]",
            "DicomServer:Security:Authentication:Audience": "[parameters('securityAuthenticationAudience')]"

        },
        "combinedDicomServerConfigProperties": "[union(variables('staticDicomServerConfigProperties'), parameters('additionalDicomServerConfigProperties'))]",
        "sqlServerResourceId": "[resourceId('Microsoft.Sql/servers/', variables('serviceName'))]",
        "dicomDatabaseName": "Dicom",
        "storageAccountName": "[concat(substring(replace(variables('serviceName'), '-', ''), 0, min(11, length(variables('serviceName')))), uniquestring(resourceGroup().id))]",
        "storageResourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "keyVaultEndpoint": "[if(variables('isMAG'), concat('https://', variables('serviceName'), '.vault.usgovcloudapi.net/'), concat('https://', variables('serviceName'), '.vault.azure.net/'))]",
        "keyVaultResourceId": "[resourceId('Microsoft.KeyVault/vaults', variables('serviceName'))]",
        "defaultDeployPackageUrl": "https://dcmcistorage.blob.core.windows.net/cibuild/Microsoft.Health.Dicom.Web.zip",
        "deployPackageUrl": "[if(empty(parameters('deployPackageUrl')),variables('defaultDeployPackageUrl'),parameters('deployPackageUrl'))]"
    },
    "resources": [
        {
            "condition": "[empty(parameters('appServicePlanResourceGroup'))]",
            "apiVersion": "2015-08-01",
            "name": "[variables('appServicePlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "tags": {
                "DicomServerSolution": "[parameters('solutionType')]"
            },
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('appServicePlanSku')]"
            },
            "properties": {
                "name": "[variables('appServicePlanName')]"
            }
        },
        {
            "apiVersion": "2015-08-01",
            "type": "Microsoft.Web/sites",
            "name": "[variables('serviceName')]",
            "tags": {
                "DicomServerSolution": "[parameters('solutionType')]"
            },
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "clientAffinityEnabled": false,
                "serverFarmId": "[variables('appServicePlanResourceId')]",
                 "siteConfig":{
                    "use32BitWorkerProcess": false
                }
            },
            "dependsOn": [
                "[if(empty(parameters('appServicePlanResourceGroup')), variables('appServicePlanResourceId'), resourceId('Microsoft.Sql/servers', variables('serviceName')))]"
            ],
            "resources": [
                {
                    "apiVersion": "2015-08-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[variables('appServiceResourceId')]",
                        "[if(variables('deployAppInsights'),concat('Microsoft.Insights/components/', variables('appInsightsName')),resourceId('Microsoft.KeyVault/vaults', variables('serviceName')))]",
                        "[concat(variables('appServiceResourceId'), '/siteextensions/AspNetCoreRuntime.5.0.x64')]",
                        "[concat(variables('appServiceResourceId'), '/extensions/MSDeploy')]"
                    ],
                    "properties": "[if(variables('deployAppInsights'), union(variables('combinedDicomServerConfigProperties'), json(concat('{\"ApplicationInsights:InstrumentationKey\": \"', reference(concat('Microsoft.Insights/components/', variables('appInsightsName'))).InstrumentationKey, '\"}'))), variables('combinedDicomServerConfigProperties'))]"
                },
                {
                    "apiVersion": "2015-08-01",
                    "name": "AspNetCoreRuntime.5.0.x64",
                    "type": "siteextensions",
                    "dependsOn": [
                        "[variables('appServiceResourceId')]"
                    ],
                    "properties": {
                        "version": "5.0.5"
                    }
                },
                {
                    "apiVersion": "2015-08-01",
                    "type": "extensions",
                    "name": "MSDeploy",
                    "condition": "[parameters('deployPackage')]",
                    "dependsOn": [
                        "[variables('appServiceResourceId')]",
                        "[concat(variables('appServiceResourceId'), '/siteextensions/AspNetCoreRuntime.5.0.x64')]"
                    ],
                    "properties": {
                        "packageUri": "[variables('deployPackageUrl')]"
                    }
                }
            ]
        },
        {
            "apiVersion": "2015-05-01",
            "name": "[variables('appInsightsName')]",
            "type": "Microsoft.Insights/components",
            "location": "[parameters('applicationInsightsLocation')]",
            "condition": "[variables('deployAppInsights')]",
            "kind": "web",
            "tags": {
                "[concat('hidden-link:', variables('appServiceResourceId'))]": "Resource",
                "displayName": "AppInsightsComponent",
                "DicomServerSolution": "[parameters('solutionType')]"
            },
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('serviceName')]"
            }
        },
        {
            "name": "[variables('serviceName')]",
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('sqlLocation')]",
            "tags": {
                "DicomServerSolution": "[parameters('solutionType')]"
            },
            "properties": {
                "administratorLogin": "dicomAdmin",
                "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "apiVersion": "2017-10-01-preview",
                    "dependsOn": [
                        "[variables('serviceName')]"
                    ],
                    "location": "[parameters('sqlLocation')]",
                    "tags": {
                        "DicomServerSolution": "[parameters('solutionType')]"
                    },
                    "name": "[variables('dicomDatabaseName')]",
                    "properties": {
                        "collation": "SQL_Latin1_General_CP1_CI_AS"
                    },
                    "sku": {
                        "name": "Standard",
                        "tier": "Standard",
                        "capacity": 20
                    },
                    "type": "databases"
                },
                {
                    "apiVersion": "2014-04-01",
                    "dependsOn": [
                        "[variables('serviceName')]"
                    ],
                    "location": "[resourceGroup().location]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    },
                    "type": "firewallrules"
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2019-04-01",
            "tags": {
                "DicomServerSolution": "[parameters('solutionType')]"
            },
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "[parameters('storageAccountSku')]"
            },
            "properties": {
                "accessTier": "Hot",
                "supportsHttpsTrafficOnly": "true"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('serviceName')]",
            "apiVersion": "2015-06-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "DicomServerSolution": "[parameters('solutionType')]"
            },
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[reference(variables('appServiceResourceId'), '2015-08-01', 'Full').Identity.tenantId]",
                "accessPolicies": [
                    {
                        "tenantId": "[reference(variables('appServiceResourceId'), '2015-08-01', 'Full').Identity.tenantId]",
                        "objectId": "[reference(variables('appServiceResourceId'), '2015-08-01', 'Full').Identity.principalId]",
                        "permissions": {
                            "secrets": [
                                "get",
                                "list",
                                "set"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false
            },
            "dependsOn": [
                "[variables('appServiceResourceId')]"
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('serviceName'), '/SqlServer--ConnectionString')]",
            "apiVersion": "2015-06-01",
            "properties": {
                "contentType": "text/plain",
                "value": "[concat('Server=tcp:', reference(variables('sqlServerResourceId'), '2015-05-01-preview').fullyQualifiedDomainName,',1433;Initial Catalog=', variables('dicomDatabaseName'), ';Persist Security Info=False;User ID=', reference(variables('sqlServerResourceId'), '2015-05-01-preview').administratorLogin,';Password=',parameters('sqlAdminPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
            },
            "dependsOn": [
                "[variables('keyVaultResourceId')]",
                "[variables('sqlServerResourceId')]"
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('serviceName'), '/BlobStore--ConnectionString')]",
            "apiVersion": "2015-06-01",
            "properties": {
                "contentType": "text/plain",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageResourceId'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';')]"
            },
            "dependsOn": [
                "[variables('keyVaultResourceId')]",
                "[variables('storageResourceId')]"
            ]
        }
    ]
}
